train_neg_sample_args:
    sample_num: "none"
load_col:
    inter: ['user_id', 'item_id', 'rating', 'timestamp']
    kg: ['head_id', 'relation_id', 'tail_id']
    link: ['item_id', 'entity_id']

# Data preprocessing for knowledge graph triples
ui_relation: "[UI-Relation]"            # (str) Name assigned to the interaction relation between users and items.
kg_reverse_r: False                     # (bool) Whether to reverse relations of triples for bidirectional edges.
entity_kg_num_interval: "[0,inf)"       # (str) Entity interval for filtering kg.
relation_kg_num_interval: "[0,inf)"     # (str) Relation interval for filtering kg.

# path_hop_length: 3              # (int) Number of hops in the knowledge path.
# max_paths_per_user: 250         # (int) Maximum number of kg sampled paths per user.
# temporal_causality: True        # (bool) Whether to use temporal causality.
# collaborative_path: False       # (bool) Whether to include users in sampled paths.
# path_sampling_strategy: weighted-rw         # (str) Strategy for sampling paths.
# reasoning_path_template: "{user} {pos_iid} {entity_list} {rec_iid}"  # (str) Template used to format reasoning pahts.
# MAX_CONSECUTIVE_INVALID_PATHS_PER_USER: 10  # (int) Maximum number of consecutive invalid paths per user.
# random_walk_args:               # (dict) Args for random walk path sampling
#     MAX_TRIES_PER_IID: 50       # (int) Maximum number of tries per positive item.
#     MAX_VISITED_DUPLICATES_PER_IID: 3       # (int) Maximum number of duplicated paths visited per positive item.
#     MAX_PATHS_PER_HOP: 1        # (int) Maximum number of paths sampled at each hop for constrained random walk.
# tokenizer:                                  # (dict) Tokenizer parameters.
#     model: WordLevel                        # (str) Tokenizer model.